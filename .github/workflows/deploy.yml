name: Build & Deploy Lambda Container

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-west-2
  IMAGE_REPO: adk-lambda
  FUNCTION_NAME: adk-lambda

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names ${{ env.IMAGE_REPO }} --region ${{ env.AWS_REGION }} >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name ${{ env.IMAGE_REPO }} --region ${{ env.AWS_REGION }}

      - name: Build, tag & push image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_REPO }}:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Create or update Lambda
        run: |
          set -e
          IMAGE_URI=$IMAGE_URI
          ROLE_ARN=arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/adk_execution

          if aws lambda get-function --function-name $FUNCTION_NAME >/dev/null 2>&1; then
            echo "Function exists — updating code and config..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --image-uri $IMAGE_URI

            echo "Waiting for function update to complete..."
            aws lambda wait function-updated \
              --function-name $FUNCTION_NAME

            echo "Now updating configuration..."
            aws lambda update-function-configuration \
              --function-name $FUNCTION_NAME \
              --timeout 120 \
              --memory-size 512
          else
            echo "Function does not exist — creating it..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --package-type Image \
              --code ImageUri=$IMAGE_URI \
              --role $ROLE_ARN \
              --timeout 120 \
              --memory-size 512
          fi

      - name: Ensure Lambda URL exists
        run: |
          aws lambda get-function-url-config \
            --function-name $FUNCTION_NAME || \
          aws lambda create-function-url-config \
            --function-name $FUNCTION_NAME \
            --auth-type "NONE"
      - name: Ensure Lambda Function URL is public
        run: |
          set -e
          aws lambda add-permission \
            --function-name ${{ env.FUNCTION_NAME }} \
            --action lambda:InvokeFunctionUrl \
            --principal "*" \
            --statement-id allow-public-invoke-url \
            --function-url-auth-type NONE \
            --region ${{ env.AWS_REGION }} || echo "Permission may already exist – continuing..."
